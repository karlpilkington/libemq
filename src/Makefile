LIBNAME=libemq
LIBEMQ_MAJOR=1
LIBEMQ_MINOR=2

CC:=gcc
OPTIMIZATION?=-O2
WARNINGS=-Wall -W -Wstrict-prototypes -Wwrite-strings
DEBUG?=-g -ggdb
COMPILE_CFLAGS=$(OPTIMIZATION) -fPIC $(CFLAGS) $(WARNINGS) $(DEBUG)
COMPILE_LDFLAGS=$(LDFLAGS)

EXAMPLES_DIR=examples

OBJ=emq.o network.o packet.o
BINS=$(EXAMPLES_DIR)/simple $(EXAMPLES_DIR)/queue-subscribe $(EXAMPLES_DIR)/channel-subscribe benchmark

DYNAMIC_LIB_SUFFIX=so
STATIC_LIB_SUFFIX=a
DYNAMIC_LIB_MINOR_NAME=$(LIBNAME).$(DYNAMIC_LIB_SUFFIX).$(LIBEMQ_MAJOR).$(LIBEMQ_MINOR)
DYNAMIC_LIB_MAJOR_NAME=$(LIBNAME).$(DYNAMIC_LIB_SUFFIX).$(LIBEMQ_MAJOR)
DYNAMIC_LIB_NAME=$(LIBNAME).$(DYNAMIC_LIB_SUFFIX)
DYNAMIC_LIB_MAKE_CMD=$(CC) -shared -Wl,-soname,$(DYNAMIC_LIB_MINOR_NAME) -o $(DYNAMIC_LIB_NAME) $(LDFLAGS)
STATIC_LIB_NAME=$(LIBNAME).$(STATIC_LIB_SUFFIX)
STATIC_LIB_MAKE_CMD=ar rcs $(STATIC_LIB_NAME)

all: $(DYNAMIC_LIB_NAME) $(STATIC_LIB_NAME) $(BINS)

$(DYNAMIC_LIB_NAME): $(OBJ)
	$(DYNAMIC_LIB_MAKE_CMD) $(OBJ)

$(STATIC_LIB_NAME): $(OBJ)
	$(STATIC_LIB_MAKE_CMD) $(OBJ)

dynamic: $(DYNAMIC_LIB_NAME)
static: $(STATIC_LIB_NAME)

$(EXAMPLES_DIR)/simple: $(STATIC_LIB_NAME)
	$(CC) -o $@ $(COMPILE_LDFLAGS) $(EXAMPLES_DIR)/simple.c -I. $(STATIC_LIB_NAME)

$(EXAMPLES_DIR)/queue-subscribe: $(STATIC_LIB_NAME)
	$(CC) -o $@ $(COMPILE_LDFLAGS) $(EXAMPLES_DIR)/queue-subscribe.c -I. $(STATIC_LIB_NAME) -lpthread

$(EXAMPLES_DIR)/channel-subscribe: $(STATIC_LIB_NAME)
	$(CC) -o $@ $(COMPILE_LDFLAGS) $(EXAMPLES_DIR)/channel-subscribe.c -I. $(STATIC_LIB_NAME) -lpthread

benchmark: $(STATIC_LIB_NAME)
	$(CC) -o $@ $(COMPILE_LDFLAGS) benchmark.c $(STATIC_LIB_NAME) -lpthread

.c.o:
	$(CC) -std=c99 -pedantic -c $(COMPILE_CFLAGS) $<

clean:
	rm -rf $(DYNAMIC_LIB_NAME) $(STATIC_LIB_NAME) $(BINS) *.o *.gcda *.gcno *.gcov

dep:
	$(CC) -MM *.c

PREFIX?=/usr/local
INCLUDE_PATH?=include/emq
LIBRARY_PATH?=lib
INSTALL_INCLUDE_PATH=$(PREFIX)/$(INCLUDE_PATH)
INSTALL_LIBRARY_PATH=$(PREFIX)/$(LIBRARY_PATH)
INSTALL?=cp -a

install: $(DYNAMIC_LIB_NAME) $(STATIC_LIB_NAME)
	mkdir -p $(INSTALL_INCLUDE_PATH) $(INSTALL_LIBRARY_PATH)
	$(INSTALL) emq.h $(INSTALL_INCLUDE_PATH)
	$(INSTALL) $(DYNAMIC_LIB_NAME) $(INSTALL_LIBRARY_PATH)/$(DYNAMIC_LIB_MINOR_NAME)
	cd $(INSTALL_LIBRARY_PATH) && ln -sf $(DYNAMIC_LIB_MINOR_NAME) $(DYNAMIC_LIB_MAJOR_NAME)
	cd $(INSTALL_LIBRARY_PATH) && ln -sf $(DYNAMIC_LIB_MAJOR_NAME) $(DYNAMIC_LIB_NAME)
	$(INSTALL) $(STATIC_LIB_NAME) $(INSTALL_LIBRARY_PATH)

uninstall:
	rm -rf $(INSTALL_INCLUDE_PATH)
	rm -rf $(INSTALL_LIBRARY_PATH)/$(LIBNAME)*

.PHONY: all dynamic static dep install clean
